#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\begin_preamble
% Preview source code

\usepackage{babel}
% Preview source code

\usepackage{babel}
% Preview source code

\usepackage{babel}
% Preview source code

\usepackage{babel}
\usepackage{tikz}


\setlength{\unitlength}{0.4cm}

% standard gates are picture (6,6)
% with connections at (-6,-1), (-6,1) and (0,0)
% inverters are (5,2) connected at (-5,0) and (0,0)
% big inverters are (10,4) connected at (-10,0) and (0,0)
% downward inverters are (2,5) connected at (0,5) and (0,0)

\newcommand{\notgate}{\begin{picture}(5,2)(5,0)
        \put(0,0){\line(1,0){2}}
        \begin{thicklines}
                \put(2,-1){\line(0,1){2}}
                \put(2,-1){\line(2,1){2}}
                \put(2,1){\line(2,-1){2}}
                \put(4.25,0){\circle{0.5}}
        \end{thicklines}
        \put(4.5,0){\line(1,0){0.5}}
\end{picture}}

\newcommand{\buffgate}{\begin{picture}(5,2)(5,0)
        \put(0,0){\line(1,0){2}}
        \begin{thicklines}
                \put(2,-1){\line(0,1){2}}
                \put(2,-1){\line(2,1){2}}
                \put(2,1){\line(2,-1){2}}
        \end{thicklines}
        \put(4,0){\line(1,0){1}}
\end{picture}}

\newcommand{\revnotgate}{\begin{picture}(5,2)(0,0)
        \put(5,0){\line(-1,0){2}}
        \begin{thicklines}
                \put(3,-1){\line(-0,1){2}}
                \put(3,-1){\line(-2,1){2}}
                \put(3,1){\line(-2,-1){2}}
                \put(0.75,0){\circle{0.5}}
        \end{thicklines}
        \put(0.5,0){\line(-1,0){0.5}}
\end{picture}}

\newcommand{\bignotgate}{\begin{picture}(10,2)(10,0)
        \put(0,0){\line(1,0){4}}
        \begin{thicklines}
                \put(4,-2){\line(0,1){4}}
                \put(4,-2){\line(2,1){4}}
                \put(4,2){\line(2,-1){4}}
                \put(8.25,0){\circle{0.5}}
        \end{thicklines}
        \put(8.5,0){\line(1,0){1.5}}
\end{picture}}

\newcommand{\downnotgate}{\begin{picture}(2,5)(0,-5)
        \put(0,0){\line(0,-1){2}}
        \begin{thicklines}
                \put(-1,-2){\line(1,0){2}}
                \put(-1,-2){\line(1,-2){1}}
                \put(1,-2){\line(-1,-2){1}}
                \put(0,-4.25){\circle{0.5}}
        \end{thicklines}
        \put(0,-4.5){\line(0,-1){0.5}}
\end{picture}}

% \newcommand\inverter{\begin{picture}(6,6)
%       \put(0,-2.25){\line(0,1){4.5}}
%       \put(0,-2.25){\line(4,3){2.7}}
%       \put(0,2.25){\line(4,-3){2.7}}
%       \begin{thicklines}
%               \put(3,0){\circle{0.75}}
%       \end{thicklines}
%       \put(6,0){\line(-1,0){2.625}}
% \end{picture}}

\newcommand{\andgate}{\begin{picture}(6,6)(6,0)  
        \multiput(0,-1)(0,2){2}{\line(1,0){1}}
        \begin{thicklines}
                \put(1,-2){\line(0,1){4}}
                \put(1,0){\oval(8,4)[r]}
        \end{thicklines}
        \put(5,0){\line(1,0){1}}
\end{picture}}

\newcommand{\rightandgate}{\begin{picture}(6,6)(6,0)  
        \put(0,0){\line(1,0){1}}
        \begin{thicklines}
                \put(1,-2){\line(0,1){4}}
                \put(1,0){\oval(8,4)[r]}
        \end{thicklines}
        \put(5,0){\line(1,0){1}}
\end{picture}}

\newcommand{\nandgate}{\begin{picture}(6,6)(6,0)  
        \multiput(0,-1)(0,2){2}{\line(1,0){1}}
        \begin{thicklines}
                \put(1,-2){\line(0,1){4}}
                \put(1,0){\oval(8,4)[r]}
                \put(5.25,0){\circle{0.5}}
        \end{thicklines}
        \put(5.5,0){\line(1,0){0.5}}
\end{picture}}

\newcommand{\orgate}{\begin{picture}(6,6)(6,0)  
        \multiput(0,-1)(0,2){2}{\line(1,0){1.7}}
        \begin{thicklines}
                \qbezier(1,2)(3,0)(1,-2)
                \qbezier(1,2)(4,2)(5,0)
                \qbezier(1,-2)(4,-2)(5,0)
        \end{thicklines}
        \put(5,0){\line(1,0){1}}
\end{picture}}

\newcommand{\leftorgate}{\begin{picture}(6,6)(-6,0)  
        \multiput(0,-1)(0,2){2}{\line(-1,0){1.7}}
        \begin{thicklines}
                \qbezier(-1,2)(-3,0)(-1,-2)
                \qbezier(-1,2)(-4,2)(-5,0)
                \qbezier(-1,-2)(-4,-2)(-5,0)
        \end{thicklines}
        \put(-5,0){\line(-1,0){1}}
\end{picture}}

\newcommand{\downorgate}{\begin{picture}(6,6)(3,0)
        % \multiput(-1,6)(2,0){2}{\line(0,-1){1.7}}
        \begin{thicklines}
                \qbezier(-2,5)(-2,2)(0,1)
                \qbezier(2,5)(2,2)(0,1)
                \qbezier(-2,5)(0,3)(2,5)
        \end{thicklines}
        \put(0,0){\line(0,1){1}}
\end{picture}}

\newcommand{\norgate}{\begin{picture}(6,6)(6,0)  
        \multiput(0,-1)(0,2){2}{\line(1,0){1.7}}
        \begin{thicklines}
                \qbezier(1,2)(3,0)(1,-2)
                \qbezier(1,2)(4,2)(5,0)
                \qbezier(1,-2)(4,-2)(5,0)
                \put(5.25,0){\circle{0.5}}
        \end{thicklines}
        \put(5.5,0){\line(1,0){0.5}}
\end{picture}}

\newcommand{\leftnorgate}{\begin{picture}(6,6)(-6,0)  
        \multiput(0,-1)(0,2){2}{\line(-1,0){1.7}}
        \begin{thicklines}
                \qbezier(-1,2)(-3,0)(-1,-2)
                \qbezier(-1,2)(-4,2)(-5,0)
                \qbezier(-1,-2)(-4,-2)(-5,0)
                \put(-5.25,0){\circle{0.5}}
        \end{thicklines}
        \put(-5.5,0){\line(-1,0){0.5}}
\end{picture}}

\newcommand{\xnorgate}{\begin{picture}(6,6)(6,0)  
        \multiput(0,-1)(0,2){2}{\line(1,0){1.5}}
        \begin{thicklines}
                \qbezier(0.8,1.9)(2.8,0)(0.8,-1.9)
                \qbezier(1.3,2)(3.0,0)(1.3,-2)
                \qbezier(1.3,2)(4,2)(5,0)
                \qbezier(1.3,-2)(4,-2)(5,0)
                \put(5.25,0){\circle{0.5}}
        \end{thicklines}
        \put(5.5,0){\line(1,0){0.5}}
\end{picture}}

\newcommand{\xorgate}{\begin{picture}(6,6)(6,0)  
        \multiput(0,-1)(0,2){2}{\line(1,0){1.5}}
        \begin{thicklines}
                \qbezier(0.8,1.9)(2.8,0)(0.8,-1.9)
                \qbezier(1.3,2)(3.0,0)(1.3,-2)
                \qbezier(1.3,2)(4,2)(5,0)
                \qbezier(1.3,-2)(4,-2)(5,0)
        \end{thicklines}
        \put(5,0){\line(1,0){1}}
\end{picture}}

\newcommand{\majgate}{\begin{picture}(6,6)(6,0)  
        \multiput(0,-1)(0,1){3}{\line(1,0){1}}
        \begin{thicklines}
                \put(1,-2){\line(0,1){4}}
                \multiput(1,-2)(0,4){2}{\line(1,0){3}}
                \put(4,0){\oval(2,4)[r]}
        \end{thicklines}
        \put(3,0){\makebox(0,0){\strut\textit{maj}}}
        \put(5,0){\line(1,0){1}}
\end{picture}}


\newcommand{\Celem}{\begin{picture}(6,6)(6,0)  
        \put(0,-1){\line(3,1){1.60}}
        \put(0,1){\line(3,-1){1.60}}
        \begin{thicklines} \put(3,0){\circle{3}} \put(3,0){\makebox(0,0){\textsc{c}}} \end{thicklines}
        \put(6,0){\line(-1,0){1.5}}
\end{picture}}

\newcommand{\Celemup}{\begin{picture}(6,6)(0,6)  
        \put(-1,0){\line(1,3){0.53}}
        \put(1,0){\line(-1,3){0.53}}
        \begin{thicklines}
                \put(0,3){\circle{3}}
                \put(0,3){\makebox(0,0){\textsc{c}}}
        \end{thicklines}
        \put(0,6){\line(0,-1){1.5}}
\end{picture}}

\newcommand{\Celemdown}{\begin{picture}(6,6)(0,0)  
        \put(-1,6){\line(1,-3){0.53}}
        \put(1,6){\line(-1,-3){0.53}}
        \begin{thicklines}
                \put(0,3){\circle{3}}
                \put(0,3){\makebox(0,0){\textsc{c}}}
        \end{thicklines}
        \put(0,0){\line(0,1){1.5}}
\end{picture}}

% standard flipflops are picture (10,10)
% with connections at (0,7), (1,3) and at (10,3) and (10,7)

\newcommand{\dtype}{\begin{picture}(10,10)(0,0)  
        \put(1,3){\line(1,0){1}}
        \put(0,7){\line(1,0){2}}
        \multiput(8,3)(0,4){2}{\line(1,0){2}}
        \begin{thicklines}
                \put(2,1){\framebox(6,8){}}
        \end{thicklines}
        \put(2,3){\makebox(0,0)[l]{$\mskip-2mu>$}}
        \put(2,7){\makebox(0,0)[l]{\textsc{\strut\,d}}}
        \put(8,7){\makebox(0,0)[r]{\textsc{\strut q\,}}}
        \put(8,3){\makebox(0,0)[r]{\textsc{\strut \=q\,}}}
\end{picture}}

\newcommand{\ttype}{\begin{picture}(10,10)(0,0)  
        \put(1,3){\line(1,0){1}}
        \put(0,7){\line(1,0){2}}
        \multiput(8,3)(0,4){2}{\line(1,0){2}}
        \begin{thicklines}
                \put(2,1){\framebox(6,8){}}
        \end{thicklines}
        \put(2,3){\makebox(0,0)[l]{$\mskip-2mu>$}}
        \put(2,7){\makebox(0,0)[l]{\textsc{\strut\,t}}}
        \put(8,7){\makebox(0,0)[r]{\textsc{\strut q\,}}}
        \put(8,3){\makebox(0,0)[r]{\textsc{\strut \=q\,}}}
\end{picture}}

\newcommand{\leveldtype}{\begin{picture}(10,10)(0,0)  
        \put(1,3){\line(1,0){1}}
        \put(0,7){\line(1,0){2}}
        \multiput(8,3)(0,4){2}{\line(1,0){2}}
        \begin{thicklines}
                \put(2,1){\framebox(6,8){}}
        \end{thicklines}
        \put(2,2.8){\framebox(0.6,0.4)[l]{}}
        \put(2,7){\makebox(0,0)[l]{\textsc{\strut\,d}}}
        \put(8,7){\makebox(0,0)[r]{\textsc{\strut q\,}}}
        \put(8,3){\makebox(0,0)[r]{\textsc{\strut \=q\,}}}
\end{picture}}





% standard transistors are picture (4.5,6)
% with connections at (0,-3), (0,3) and gate at (-4.5,0)

\newcommand{\sntrans}{{\begin{picture}(4.5,8)(-4.5, -3)
        \put(-4.5,0){\line(1,0){2.25}}
        \put(-2.25,-1.5){\line(0,1){3}}
        \begin{thicklines}
                \put(-1.5,-1.5){\line(0,1){3}}
        \end{thicklines}
        \put(0,-3){\line(0,1){1.5}}
        \put(0,-1.5){\line(-1,0){1.5}}
        \put(0,1.5){\line(-1,0){1.5}}
        \put(0,3){\line(0,-1){1.5}}
        \put(1,-3){$d$}
        \put(1,3){$s$}
\put(-5.5,0){$g$}
\end{picture}}}

\newcommand{\ntrans}{{\begin{picture}(4.5,6)(0,0)
        \put(-4.5,0){\line(1,0){2.25}}
        \put(-2.25,-1.5){\line(0,1){3}}
        \begin{thicklines}
                \put(-1.5,-1.5){\line(0,1){3}}
        \end{thicklines}
        \put(0,-3){\line(0,1){1.5}}
        \put(0,-1.5){\line(-1,0){1.5}}
        \put(0,1.5){\line(-1,0){1.5}}
        \put(0,3){\line(0,-1){1.5}}
\end{picture}}}

\newcommand{\ntransdown}{{\begin{picture}(6,4.5)(0,0) 
        \put(0,-4.5){\line(0,1){2.25}}
        \put(1.5,-2.25){\line(-1,0){3}}
        \begin{thicklines}
                \put(1.5,-1.5){\line(-1,0){3}}
        \end{thicklines}
        \put(3,0){\line(-1,0){1.5}}
        \put(-1.5,0){\line(0,-1){1.5}}
        \put(1.5,0){\line(0,-1){1.5}}
        \put(-3,0){\line(1,0){1.5}}
\put(0,-4){$d$}
        \put(0,4){$s$}
\put(-5.5,0){$g$}
\end{picture}}}

\newcommand{\ntransup}{{\begin{picture}(6,4.5)(0,0)
        \put(0,4.5){\line(0,-1){2.25}}
        \put(-1.5,2.25){\line(1,0){3}}
        \begin{thicklines}
                \put(-1.5,1.5){\line(1,0){3}}
        \end{thicklines}
        \put(-3,0){\line(1,0){1.5}}
        \put(-1.5,0){\line(0,1){1.5}}
        \put(1.5,0){\line(0,1){1.5}}
        \put(3,0){\line(-1,0){1.5}}
\end{picture}}}

\newcommand{\sptrans}{{\begin{picture}(4.5,6)(-4.5,-3) 
        \put(-4.5,0){\line(1,0){1.5}}
        \put(-2.625,0){\circle{0.75}}
        \put(-2.25,-1.5){\line(0,1){3}}
        \begin{thicklines}
                \put(-1.5,-1.5){\line(0,1){3}}
        \end{thicklines}
        \put(0,-3){\line(0,1){1.5}}
        \put(0,-1.5){\line(-1,0){1.5}}
        \put(0,1.5){\line(-1,0){1.5}}
        \put(0,3){\line(0,-1){1.5}}
\put(1,-3){$d$}
        \put(1,3){$s$}
\put(-5.5,0){$g$}
\end{picture}}}

\newcommand{\ptrans}{{\begin{picture}(4.5,6)(0,0) 
        \put(-4.5,0){\line(1,0){1.5}}
        \put(-2.625,0){\circle{0.75}}
        \put(-2.25,-1.5){\line(0,1){3}}
        \begin{thicklines}
                \put(-1.5,-1.5){\line(0,1){3}}
        \end{thicklines}
        \put(0,-3){\line(0,1){1.5}}
        \put(0,-1.5){\line(-1,0){1.5}}
        \put(0,1.5){\line(-1,0){1.5}}
        \put(0,3){\line(0,-1){1.5}}
\end{picture}}}

\newcommand{\ptransup}{{\begin{picture}(6,4.5)(0,0)
        \put(0,4.5){\line(0,-1){1.5}}
        \put(0,2.625){\circle{0.75}}
        \put(-1.5,2.25){\line(1,0){3}}
        \begin{thicklines}
                \put(-1.5,1.5){\line(1,0){3}}
        \end{thicklines}
        \put(-3,0){\line(1,0){1.5}}
        \put(-1.5,0){\line(0,1){1.5}}
        \put(1.5,0){\line(0,1){1.5}}
        \put(3,0){\line(-1,0){1.5}}
\end{picture}}}

\newcommand{\ptransdown}{{\begin{picture}(6,4.5)(0,0) 
        \put(0,-4.5){\line(0,1){1.5}}
        \put(0,-2.625){\circle{0.75}}
        \put(1.5,-2.25){\line(-1,0){3}}
        \begin{thicklines}
                \put(1.5,-1.5){\line(-1,0){3}}
        \end{thicklines}
        \put(3,0){\line(-1,0){1.5}}
        \put(-1.5,0){\line(0,-1){1.5}}
        \put(1.5,0){\line(0,-1){1.5}}
        \put(-3,0){\line(1,0){1.5}}
\end{picture}}}

\newcommand{\blob}{{\circle*{0.4}}}
\usepackage{xfrac}
\usepackage[protrusion=true,expansion=true,kerning=true,tracking=true,spacing=true]{microtype}
\usepackage{tabularx}
\usepackage{cleveref}
\end_preamble
\options ruled,noend,slide
\use_default_options false
\begin_modules
algorithm2e
logicalmkup
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding iso8859-15
\fontencoding T1
\font_roman lmodern
\font_sans lmss
\font_typewriter lmtt
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 1
\output_sync_macro "\synctex=-1"
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "CMOS Calculator"
\pdf_author "Candidate 597618"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref page
\pdf_pdfusetitle false
\papersize default
\use_geometry false
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 2
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
CMOS Calculator
\end_layout

\begin_layout Author
Candidate 597618
\end_layout

\begin_layout Date
2014 -- 2015
\end_layout

\begin_layout Abstract
The aim of this project was to build a CMOS simulator, with the following
 interactive elements: 
\end_layout

\begin_deeper
\begin_layout Itemize
Simplification and CMOS implementation of arbitrary logical expressions
 
\end_layout

\begin_deeper
\begin_layout Standard
 
\end_layout

\end_deeper
\begin_layout Itemize
Simulation to visualise the change in flow of potential as the state of
 inputs changed 
\end_layout

\begin_deeper
\begin_layout Standard
 
\end_layout

\end_deeper
\begin_layout Itemize
Simulation of delay in propagation of state for large networks.
 
\end_layout

\begin_deeper
\begin_layout Standard
 
\end_layout

\end_deeper
\end_deeper
\begin_layout Abstract
There are many tools in existence to design CMOS circuits, but most focus
 on the physical implementation and the exact positioning of gates, rather
 than a more abstract approach, as may be required when reasoning about
 the layout of circuits, this tool seeks to remedy that issue.
 It quickly became apparent that the approach that I was using had various
 similarities to a compiler, which will be a focus of this document.
 Additionally, this report will discuss alternative approaches not used
 in the final implementation to produce the final CMOS output 
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
listofalgorithms
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
The idea of logical functions is familiar to many, and even a schoolchild
 can grasp the concept of a box receiving true/false inputs and producing
 a true/false output, and lots of these boxes in interesting combinations
 can yield more interesting functions.
 Through introducing these concepts, and producing more and more intricate
 diagrams, a they can then see how more complicated ideas, such as addition
 and subtraction are implemented, and maybe how these are used in the modern
 computers used today.
 However, what is rarely discussed is what is inside these boxes: they are
 usually presented as the lowest level inputs and treated as the basic building
 blocks.
 The layer underneath this is built up of Complementary Metal-Oxide Semiconducto
rs, henceforth referred to as CMOS.
\end_layout

\begin_layout Subsection
Definitions
\end_layout

\begin_layout Subsubsection
Logical Expressions
\end_layout

\begin_layout Standard
A logical expression is built from a combination of constants, literals,
 conjunctions, disjunctions and negations, using a grammar described as
 follows:
\begin_inset CommandInset citation
LatexCommand cite
key "intlog"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
e & = & \neg e\label{eq:neg}\\
 & \mid & e\lor e\label{eq:disj}\\
 & \mid & e\land e\label{eq:conj}\\
 & \mid & c\label{eq:cons}\\
 & \mid & v\label{eq:var}\\
v & \in & \Sigma\\
c & = & \top\mid\bot
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\Sigma$
\end_inset

 is some accepted alphabet of variable (specifically, in this program, as
 described by the regular expression 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb&^(?!out$)([A-Za-z0-9]+)&
\end_layout

\end_inset

 that is, every alphanumeric phrase, with the exception of the single word
 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb+out+
\end_layout

\end_inset

, which has been reserved for specific use within the program).
 
\begin_inset Formula $\top\text{ and }\bot$
\end_inset

 are used within this text to denote the notions true and false, respectively,
 and are represented in the program by the strings 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

 and 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 respectively.
 Additionally, the order that the various production rules are listed also
 gives an order of precedence, with negations binding more tightly than
 disjunctions and conjunctions.
 Each variable within the expression that is used is given an assignment
 by an evaluation function, commonly called 
\begin_inset Formula $\mathcal{A}:\mathcal{V}\rightarrow\{\top,\bot\}$
\end_inset


\begin_inset CommandInset label
LatexCommand label
name "eq:assi"

\end_inset

, with the set of variables typically denoted as 
\begin_inset Formula $\mathcal{V}$
\end_inset

.
 A logical expression 
\begin_inset Formula $E$
\end_inset

 is then evaluated recursively based on the following rules: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $E=F\land G$
\end_inset

: 
\begin_inset Formula $E$
\end_inset

 is evaluated as true iff 
\begin_inset Formula $F$
\end_inset

 is true and 
\begin_inset Formula $G$
\end_inset

 is true (corresponding to (
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
nameref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

eq:neg
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

)) 
\end_layout

\begin_layout Itemize
\begin_inset Formula $E=F\lor G$
\end_inset

: 
\begin_inset Formula $E$
\end_inset

 is evaluated as true iff 
\begin_inset Formula $F$
\end_inset

 is true or 
\begin_inset Formula $G$
\end_inset

 is true (corresponding to (
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
nameref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

eq:disj
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

)) 
\end_layout

\begin_layout Itemize
\begin_inset Formula $E=\neg F$
\end_inset

: 
\begin_inset Formula $E$
\end_inset

 is evaluated as true iff 
\begin_inset Formula $F$
\end_inset

 is false (corresponding to (
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
nameref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

eq:conj
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

)) 
\end_layout

\begin_layout Itemize
\begin_inset Formula $E=v$
\end_inset

 for some 
\begin_inset Formula $v\in\Sigma$
\end_inset

 is evaluated as true iff 
\begin_inset Formula $\mathcal{A}(v)=\top$
\end_inset

 (corresponding to (
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
nameref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

eq:cons
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

)) 
\end_layout

\begin_layout Itemize
\begin_inset Formula $E=c$
\end_inset

 for some constant is evaluated as the constant (corresponding to (
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
nameref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

eq:var
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

)) 
\end_layout

\begin_layout Subsubsection
CMOS Gates
\end_layout

\begin_layout Standard
As the name would indicate, CMOS is made up of two distinct, complementarily
 defined parts
\begin_inset CommandInset citation
LatexCommand cite
key "digsys"

\end_inset

: a P-Gate can only carry high potential from their source to their drain,
 whereas an N-Gate can only carry low potential from their drain to their
 source.
 Two power rails then provide a low potential (the drain), and a high potential
 (the source), with a third wire used as the output wire.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
P(g,s,d) & = & \neg g\rightarrow(s\leftrightarrow d)\label{eq:pgate}\\
N(g,s,d) & = & g\rightarrow(s\leftrightarrow d)\label{eq:ngate}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
nameref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

eq:pgate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 describes a simplified version of the P-Gate: the potential is only carried
 (
\begin_inset Formula $s\text{ matches }d$
\end_inset

) when the input 
\begin_inset Formula $g$
\end_inset

 is not powered, losing the notion that only high potential flows from the
 source to the drain.
 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
nameref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

eq:ngate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 similarly describes a simplified version of the N-Gate: the potential is
 only carried (
\begin_inset Formula $s\text{ matches }d$
\end_inset

) when the input 
\begin_inset Formula $g$
\end_inset

 is powered, losing the notion that only low potential flows from the drain
 to the source.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
sntrans
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{picture}
\end_layout

\end_inset

(4.5,6)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{picture}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
sptrans
\end_layout

\end_inset

 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
protect
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
protect
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
protect
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
protect
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
N-Gate and P-Gate, respectively
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Therefore, when using these gates, it is not sufficient to specify the implement
ation of a logical expression in a positive sense (carrying potential when
 the valuations of the inputs causes the expression to be evaluated as true),
 but rather, both the high potential must be driven to the output, and the
 low potential, using a complementary set of networks, made up solely of
 P-Gates and N-Gates.
 Throughout this report, and in the implementation, these are drawn with
 the high potential being carried from the top of a diagram to the middle
 by a network of P-Gates, and the low potential being carried from the bottom
 of a diagram to the middle by a network of N-Gates.
 To model conjunctions, a pair of P-Gates should be placed in series, indicating
 that the second gate will only carry the potential if its variable is not
 driven, and the first gate is carrying a high potential.
 Similarly, a disjunction is modelled by a pair of P-Gates placed in parallel:
 potential will be carried if at least one of the gates' variables is not
 driven.
\end_layout

\begin_layout Standard
In a more general sense, for some expression 
\begin_inset Formula $e$
\end_inset

, we want a circuit 
\begin_inset Formula $c=(p,n)$
\end_inset

 such that 
\begin_inset Formula $p\rightarrow e$
\end_inset

 and 
\begin_inset Formula $n\leftarrow e\equiv n\rightarrow\neg e$
\end_inset

, where 
\begin_inset Formula $p\text{ and }n$
\end_inset

 are entirely made of P- and N- gates respectively.
\end_layout

\begin_layout Standard
Suppose that 
\begin_inset Formula $a\land b$
\end_inset

 is part of a network of P-Gates, such that 
\begin_inset Formula $p$
\end_inset

 is the drain immediately above the implementation of 
\begin_inset Formula $a\land b$
\end_inset

, and 
\begin_inset Formula $q$
\end_inset

 is the source immediately below the implementation.
 Therefore, 
\begin_inset Formula $p$
\end_inset

 is acting as the source for 
\begin_inset Formula $a\land b$
\end_inset

, and 
\begin_inset Formula $q$
\end_inset

 is the drain, and we therefore want a series of gates such that 
\begin_inset Formula $a\land b\rightarrow(p\leftrightarrow q)$
\end_inset

.
 As described above, we will need the two gates in series to give the necessary
 result, and they must be connected somehow, so we therefore introduce a
 new variable to act as the point between them: 
\begin_inset Formula 
\begin{eqnarray*}
 &  & a\land b\rightarrow(p\leftrightarrow q)\\
 & = & \exists x\cdot((a\rightarrow(p\leftrightarrow x))\land(b\rightarrow(x\leftrightarrow q)))\\
 & = & \exists x\cdot P(\neg a,p,x)\land P(\neg b,x,q)
\end{eqnarray*}

\end_inset

To define a similar construction in N-Gates, we have 
\begin_inset Formula 
\begin{eqnarray*}
 &  & a\land b\leftarrow p\leftrightarrow q\\
 & \equiv & \neg(a\land b)\rightarrow(p\leftrightarrow q)\\
 & \equiv & \neg a\lor\neg b\rightarrow(p\leftrightarrow q)
\end{eqnarray*}

\end_inset

and we therefore derive 
\begin_inset Formula 
\begin{eqnarray*}
 &  & \neg a\lor\neg b\rightarrow(p\leftrightarrow q)\\
 & = & (\neg a\rightarrow(p\leftrightarrow q))\land(\neg b\rightarrow(p\leftrightarrow q))\\
 & = & N(\neg a,p,q)\land N(\neg b,p,q)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Alternatively, suppose that 
\begin_inset Formula $a\lor b$
\end_inset

 is part of a network of P-Gates, with 
\begin_inset Formula $p$
\end_inset

 and 
\begin_inset Formula $q$
\end_inset

 behaving as before, and we therefore want a series of gates such that 
\begin_inset Formula $a\lor b\rightarrow(p\leftrightarrow q)$
\end_inset

.
 As described above, we will need the two gates in parallel to give the
 necessary result: 
\begin_inset Formula 
\begin{eqnarray*}
 &  & a\lor b\rightarrow(p\leftrightarrow q)\\
 & = & (a\rightarrow(p\leftrightarrow q))\land(b\rightarrow(p\leftrightarrow q))\\
 & = & P(\neg a,p,q)\land P(\neg b,p,q)
\end{eqnarray*}

\end_inset

To define a similar construction in N-Gates, we have 
\begin_inset Formula 
\begin{eqnarray*}
 &  & a\lor b\leftarrow p\leftrightarrow q\\
 & \equiv & \neg(a\lor b)\rightarrow(p\leftrightarrow q)\\
 & \equiv & \neg a\land\neg b\rightarrow(p\leftrightarrow q)
\end{eqnarray*}

\end_inset

and we therefore derive 
\begin_inset Formula 
\begin{eqnarray*}
 &  & \neg a\land\neg b\rightarrow(p\leftrightarrow q)\\
 & = & \exists x\cdot(\neg a\rightarrow(p\leftrightarrow x))\land(\neg b\rightarrow(x\leftrightarrow q))\\
 & = & N(\neg a,p,x)\land N(\neg b,p,x)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
The following networks are standard implementations of nand- and nor-gates:
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
setlength{
\backslash
unitlength}{0.015
\backslash
textwidth}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{picture}
\end_layout

\end_inset

(25,27)(-2,-3) 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{thicklines}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
multiput
\end_layout

\end_inset

(0,0)(0,24)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(1,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

18
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{thicklines}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
multiput
\end_layout

\end_inset

(12,3)(0,6)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ntrans
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
multiput
\end_layout

\end_inset

(9,21)(6,-6)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ptrans
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
multiput
\end_layout

\end_inset

(9,24)(6,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
blob
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(15,24)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(0,-1)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

6
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(0,21)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(1,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

6
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(-3,21)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
makebox(0,0){
\end_layout

\end_inset


\begin_inset Formula $b$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(3,21)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
blob
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(3,21)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(0,-1)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

12
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(3,9)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(1,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

6
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(0,3)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(1,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

9
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(-3,3)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
makebox(0,0){
\end_layout

\end_inset


\begin_inset Formula $a$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(6,3)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
blob
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(6,3)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(0,1)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

5.7
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(6,15)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(0,-1)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

5.7
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(6,15)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(1,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

2.7
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(12,15)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(-1,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

2.7
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(12,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
blob
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(9,18)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(0,-1)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

6
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(9,12)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(1,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

9
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(21,12)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
makebox(0,0){
\end_layout

\end_inset


\begin_inset Formula ${\it out}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
multiput
\end_layout

\end_inset

(12,12)(3,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
blob
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(9,-3)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 1
width "0pt"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Formula $\mathit{out}=\lnot(a\wedge b)$
\end_inset


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{picture}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{picture}
\end_layout

\end_inset

(25,27)(-2,-3) 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{thicklines}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
multiput
\end_layout

\end_inset

(0,0)(0,24)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(1,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

18
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{thicklines}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
multiput
\end_layout

\end_inset

(12,21)(0,-6)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ptrans
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
multiput
\end_layout

\end_inset

(9,3)(6,6)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ntrans
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
multiput
\end_layout

\end_inset

(9,0)(6,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
blob
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(15,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(0,1)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

6
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(0,3)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(1,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

6
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(-3,3)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
makebox(0,0){
\end_layout

\end_inset


\begin_inset Formula $a$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(3,3)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
blob
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(3,3)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(0,1)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

12
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(3,15)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(1,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

6
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(0,21)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(1,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

9
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(-3,21)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
makebox(0,0){
\end_layout

\end_inset


\begin_inset Formula $b$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(6,21)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
blob
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(6,21)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(0,-1)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

5.7
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(6,9)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(0,1)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

5.7
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(6,9)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(1,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

2.7
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(12,9)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(-1,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

2.7
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(12,24)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
blob
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(9,6)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(0,1)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

6
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(9,12)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(1,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

9
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(21,12)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
makebox(0,0){
\end_layout

\end_inset


\begin_inset Formula ${\it out}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
multiput
\end_layout

\end_inset

(12,12)(3,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
blob
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(9,-3)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 1
width "0pt"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Formula $\mathit{out}=\lnot(a\vee b)$
\end_inset


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{picture}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
protect
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Standard nor- and nand- gate implementations
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Requirements and Design
\end_layout

\begin_layout Subsection
Requirements
\end_layout

\begin_layout Standard
The program would be expected to satisfy the following minimal requirements
 in order for it to be considered successful: 
\end_layout

\begin_layout Itemize
Accuracy: any representation of CMOS produced must correctly implement the
 logical expression that has been entered, and the visual output of the
 expression should match the model that has been stored 
\end_layout

\begin_layout Itemize
Representation: the produced visualisation should be intuitive to read:
 each element should be presented separately from the others, and clearly
 labelled.
 Any gate carrying potential should be clearly highlighted.
 
\end_layout

\begin_layout Itemize
Portability: the visual output produced by the program should be available
 to the user in a variety of formats 
\end_layout

\begin_layout Itemize
Interactivity: the program should produce sensible warnings when an expression
 that is not possible to parse has been entered.
 Once a CMOS representation has been constructed, it should be possible
 for the user to interact with the publicly visible inputs (the variables
 named in the initial expression), with updates delivered with a minimal
 amount of latency.
 Should the user wish to view the change in state due to the latency of
 the gates, this should be visible, and at a variable speed.
 
\end_layout

\begin_layout Standard
Given the nature of the project, the model-view-controller paradigm allows
 a sensible division of labour, also allowing for extensibility and clear
 separation of the purpose of the model and the interface.
\end_layout

\begin_layout Subsection
Design
\end_layout

\begin_layout Standard
In order to fulfil the above specfications, it was obvious that a graphical
 interface would be required, so that the user could quicly interact with
 the program and determine the variable assignments intuitively, and to
 have their actions quickly reflected in the circuit diagram.
 Initially, due to the quality of the output produced by LaTeX diagrams,
 using the Tikz engine to produce the output and importing temporary files
 was considered, given the success of projects such as TikzEdt
\begin_inset CommandInset citation
LatexCommand cite
key "tikzedt"

\end_inset

, however, as it would not be possible to assume that any system would have
 the necessary libraries and programs installed, it was determined that
 this would not be a feasible method to consider.
 Additionally, by using a Java-based drawing library, animations would be
 easier, should the project be extended to include them, as opposed to a
 LaTeX based solution, which is, by definition, designed for static documents.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[scale=1, every node/.style={scale=1,font=
\backslash
small}]
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
draw  (0,0) rectangle (10,6) node (v16) {}; 
\backslash
draw  (0.5,0.5) rectangle (4,5.5); 
\backslash
draw  (4.5,0.5) rectangle (9.5,5.5) node (v15) {}; 
\backslash
draw  (1,5) rectangle (3,4.5); 
\backslash
draw  (3,5) rectangle (3.5,4.5); 
\backslash
node at (3.25,4.75) {Go}; 
\backslash
node at (2.,4.75) {Expression}; 
\backslash
node at (2.25,3.75) {Variable$_0$}; 
\backslash
node at (2.25,3.25) {Variable$_1$}; 
\backslash
node at (2.25,2.75) {Variable$_2$}; 
\backslash
node at (2.25,2.25) {Variable$_3$}; 
\backslash
node at (2.25,1.75) {Variable$_4$}; 
\backslash
node at (2.25,1.25) {Variable$_5$}; 
\backslash
node at (7,3) {Diagram}; 
\backslash
draw  (1,4) node (v7) {} rectangle (3.5,3.5); 
\backslash
draw  (1,3) node (v1) {} rectangle (3.5,3.5); 
\backslash
draw  (3.5,2.5) node (v2) {} rectangle (v1); 
\backslash
draw  (1,2) node (v3) {} rectangle (v2); 
\backslash
draw  (3.5,1.5) node (v4) {} rectangle (v3); 
\backslash
draw  (1,1) rectangle (v4); 
\backslash
draw  (1.5,3.5) node (v8) {} rectangle (1,4); 
\backslash
draw  (1.5,3) node (v10) {} rectangle (1,3.5) node (v5) {}; 
\backslash
draw  (1.5,2.5) node (v11) {} rectangle (v1); 
\backslash
draw  (1.5,2) node (v13) {} rectangle (1,2.5) node (v9) {}; 
\backslash
draw  (1.5,1.5) node (v12) {} rectangle (1,2); 
\backslash
draw  (1.5,1) rectangle (1,1.5) node (v14) {}; 
\backslash
node (v6) at (1.5,4) {}; 
\backslash
draw  (v5) edge (v6); 
\backslash
draw  (v7) edge (v8); 
\backslash
draw  (v9) edge (v10); 
\backslash
draw  (v1) edge (v11); 
\backslash
draw  (v12) edge (v3); 
\backslash
draw  (v13) edge (v14); 
\backslash
draw  (8.5,6) rectangle (9,5.5); 
\backslash
draw  (9,6) rectangle (v15); 
\backslash
draw  (9.5,6) node (v18) {} rectangle (10,5.5) node (v17) {}; 
\backslash
draw  (v15) edge (v16); 
\backslash
draw  (v17) edge (v18); 
\backslash
draw  (9.1,5.9) rectangle (9.4,5.6); 
\backslash
draw  (8.6,5.7) rectangle (8.9,5.6); 
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset

 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
protect
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Initial Design
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Implementation
\end_layout

\begin_layout Standard
By convention, when class diagrams are used, ovals will represent traits/abstrac
t classes, with rectangles representing concrete implementations.
\end_layout

\begin_layout Subsection
Model
\end_layout

\begin_layout Subsubsection
Logical Expressions
\end_layout

\begin_layout Standard
Every object that is used to represent logical expressions inherits from
 some common 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Plain Layout
Node
\end_layout

\end_inset

 object that requires an accessor to determine if the given fragment evaluates
 to true, as defined in 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
nameref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

eq:neg
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 onwards.
 As would be expected given the recursive nature of the design of the grammar
 of the language of propositional logic, the parameters taken by each class
 that is not an atom are nodes, and these are then evaluated recursively.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[scale=0.6, every node/.style={scale=0.6}]
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
draw (0,2) node (v0) { Node } ellipse (1.5 and 1);
\end_layout

\begin_layout Plain Layout


\backslash
draw  (-3.5,-1.5) node (v1) { Atom } ellipse (1.5 and 1);
\end_layout

\begin_layout Plain Layout


\backslash
draw  (-5,-3.5) rectangle (-8,-5.5);
\end_layout

\begin_layout Plain Layout


\backslash
node at (-6.5,-4.5) { Variable };
\end_layout

\begin_layout Plain Layout


\backslash
draw [->]  plot[smooth, tension=.9] coordinates {(-5,-1.5) (-6,-2) (-6.5,-3.5)};
\end_layout

\begin_layout Plain Layout


\backslash
draw [->]  plot[smooth, tension=.9] coordinates {(-1.5,2) (-3,1.5) (-3.5,-0.5)};
\end_layout

\begin_layout Plain Layout


\backslash
draw  (-2,-3.5) rectangle (1,-5.5);
\end_layout

\begin_layout Plain Layout


\backslash
node at (-0.5,-4.5) {Constant};
\end_layout

\begin_layout Plain Layout


\backslash
draw [->]  plot[smooth, tension=.9] coordinates {(-2,-1.5) (-1,-2) (-0.5,-3.5)};
\end_layout

\begin_layout Plain Layout


\backslash
draw  (3,5.5) rectangle (6,3.5);
\end_layout

\begin_layout Plain Layout


\backslash
draw  (3,3) rectangle (6,1);
\end_layout

\begin_layout Plain Layout


\backslash
draw  (3,0.5) rectangle (6,-1.5);
\end_layout

\begin_layout Plain Layout


\backslash
node at (4.5,4.5) {And};
\end_layout

\begin_layout Plain Layout


\backslash
node at (4.5,2) {Or};
\end_layout

\begin_layout Plain Layout


\backslash
node at (4.5,-0.5) {Not};
\end_layout

\begin_layout Plain Layout


\backslash
draw [->]  plot[smooth, tension=.9] coordinates {(0,3) (1,4) (3,4.5)};
\end_layout

\begin_layout Plain Layout


\backslash
draw [->]  plot[smooth, tension=.7] coordinates {(1.5,2) (3,2)};
\end_layout

\begin_layout Plain Layout


\backslash
draw [->]  plot[smooth, tension=.9] coordinates {(0,1) (1,0) (3,-0.5)};
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset

 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
protect
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Logical Expression Class Relations
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Expressions are then parsed using Scala's packrat parsing library.
 During parsing, each new variable is registered with a static map stored
 in the 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Plain Layout
Variable
\end_layout

\end_inset

 object, that takes the place of the assignment function 
\begin_inset Formula $\mathcal{A}$
\end_inset

, as discussed in 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
nameref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

eq:assi
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

.
 After parsing, but before the gate implementation (see 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
nameref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

sub:Gates-and-Wires
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

), a modified version of the Quine-McCluskey algorithm (see 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
nameref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

sub:Normal-Forms
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

) is applied to the parsed expression to minimise it and produce a canonical
 form.
\end_layout

\begin_layout Subsubsection
Gates and Wires
\begin_inset CommandInset label
LatexCommand label
name "sub:Gates-and-Wires"

\end_inset


\end_layout

\begin_layout Standard
The gates are similarly structured: inheriting common attributes, where
 possible, through a central 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Plain Layout
Gate
\end_layout

\end_inset

 class, sub-typing as appropriate.
 There are five different types of wire, all inheriting from a central 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Plain Layout
Wire
\end_layout

\end_inset

 class.
 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Plain Layout
Source
\end_layout

\end_inset

 and 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Plain Layout
Drain
\end_layout

\end_inset

 objects
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Objects are indicated using bold lines in the diagram, and are similar in
 behaviour to statically declared objects in many languages.
\end_layout

\end_inset

 are responsible solely for delivering high and low potentials respectively,
 and a 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Plain Layout
Result
\end_layout

\end_inset

 object acting as the central link.
 Finally, there are two wire classes responsible for carrying high and low
 potential downwards and upwards called 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Plain Layout
WireHigh
\end_layout

\end_inset

 and 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Plain Layout
WireLow
\end_layout

\end_inset

, respectively.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[scale=0.6, every node/.style={scale=0.6}]
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
draw  (0,0) ellipse (1.5 and 1);
\end_layout

\begin_layout Plain Layout


\backslash
node at (0,0) {Gate};
\end_layout

\begin_layout Plain Layout


\backslash
draw  (-1.5,2) rectangle (1.5,4);
\end_layout

\begin_layout Plain Layout


\backslash
node at (0,3) {PGate};
\end_layout

\begin_layout Plain Layout


\backslash
draw  (-1.5,-2) rectangle (1.5,-4);
\end_layout

\begin_layout Plain Layout


\backslash
node at (0,-3) {NGate};
\end_layout

\begin_layout Plain Layout


\backslash
draw [->] plot[smooth, tension=.7] coordinates {(0,1) (0,2)};
\end_layout

\begin_layout Plain Layout


\backslash
draw [->] plot[smooth, tension=.7] coordinates {(0,-1) (0,-2)};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
draw  (10.5,0) ellipse (1.5 and 1);
\end_layout

\begin_layout Plain Layout


\backslash
draw  (10.5,4) ellipse (1.5 and 1);
\end_layout

\begin_layout Plain Layout


\backslash
draw  (10.5,-4) ellipse (1.5 and 1);
\end_layout

\begin_layout Plain Layout


\backslash
node at (10.5,4) {Output};
\end_layout

\begin_layout Plain Layout


\backslash
node at (10.5,0) {Wire};
\end_layout

\begin_layout Plain Layout


\backslash
node at (10.5,-4) {Input};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
draw  (7,-1) rectangle (4,1);
\end_layout

\begin_layout Plain Layout


\backslash
draw  (14,-1) rectangle (17,1);
\end_layout

\begin_layout Plain Layout


\backslash
node at (5.5,0) {WireHigh};
\end_layout

\begin_layout Plain Layout


\backslash
node at (15.5,0) {WireLow};
\end_layout

\begin_layout Plain Layout


\backslash
draw [thick] (4,5) rectangle (7,3);
\end_layout

\begin_layout Plain Layout


\backslash
draw [thick] (4,-5) rectangle (7,-3);
\end_layout

\begin_layout Plain Layout


\backslash
draw [thick] (14,3) rectangle (17,5);
\end_layout

\begin_layout Plain Layout


\backslash
node at (5.5,4) {Source};
\end_layout

\begin_layout Plain Layout


\backslash
node at (5.5,-4) {Drain};
\end_layout

\begin_layout Plain Layout


\backslash
node at (15.5,4) {Output};
\end_layout

\begin_layout Plain Layout


\backslash
draw  [->] plot[smooth, tension=.9] coordinates {(10, 4-0.94280904158) (9.5,2)
 (7,0.5)};
\end_layout

\begin_layout Plain Layout


\backslash
draw  [->] plot[smooth, tension=.9] coordinates {(9,4) (7,4)};
\end_layout

\begin_layout Plain Layout


\backslash
draw  [->] plot[smooth, tension=.9] coordinates {(12,4) (14,4)};
\end_layout

\begin_layout Plain Layout


\backslash
draw  [->] plot[smooth, tension=.9] coordinates {(11, 4-0.94280904158) (11.5,2)
 (14,0.5)};
\end_layout

\begin_layout Plain Layout

% x = 10,   y = -(2 sqrt(2))/3
\end_layout

\begin_layout Plain Layout


\backslash
draw  [->] plot[smooth, tension=.9] coordinates {(9,0) (7,0)};
\end_layout

\begin_layout Plain Layout


\backslash
draw  [->] plot[smooth, tension=.9] coordinates {(12,0) (14,0)};
\end_layout

\begin_layout Plain Layout


\backslash
draw  [->] plot[smooth, tension=.9] coordinates {(10, -3.057190958) (9.5,-2)
 (7,-0.5)};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
draw  [->] plot[smooth, tension=.9] coordinates {(11, -3.057190958) (11.5,-2)
 (14,-0.5)};
\end_layout

\begin_layout Plain Layout


\backslash
draw  [<-] plot[smooth, tension=.9] coordinates {(9,-4) (7,-4)};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
draw  [->] plot[smooth, tension=0.9] coordinates {(11, 0.94280904158) (12,2)
 (14,3.5)};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
draw  [->] plot[smooth, tension=.7] coordinates {(12,-4) (17,-3) (18,-0.5)
 (16.5,3)};
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset

 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
protect
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Gate and Wire Class Relations
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwInOut
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Input
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Input
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwInOut
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Output
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Output
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwInOut
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

SideEffects
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset

Side Effects
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

prvsGt
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

previousGate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Result
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Result
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Source
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Source
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Drain
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Drain
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Input
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Expression 
\begin_inset Formula $E=\bigvee_{i=1}^{n}\left(\bigwedge_{j=1}^{m}P_{i}\right)$
\end_inset

 in Disjunctive Normal Form
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Output
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

None
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SideEffects
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Flex Flex:Code
status collapsed

\begin_layout Plain Layout
Result
\end_layout

\end_inset

 has a set of gates connected that implement 
\begin_inset Formula $E$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
BlankLine
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
clear 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Result
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
prvsGt
\end_layout

\end_inset

 
\begin_inset Formula $\gets()$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ForEach
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $c_{i}\in E=c_{1}\lor c_{2}\lor\ldots\lor c_{n}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ForEach
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $l_{i}\in c_{i}=l_{1}\land l_{2}\land\ldots\land l_{m}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
eIf
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
prvsGt
\end_layout

\end_inset

 is defined
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 Create a new gate and connect it to 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
prvsGt
\end_layout

\end_inset

, updating 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
prvsGt
\end_layout

\end_inset

 to the new gate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 Create a new gate and connect it to 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Result
\end_layout

\end_inset

, setting 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
prvsGt
\end_layout

\end_inset

 to this gate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 Connect 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
prvsGt
\end_layout

\end_inset

 to 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Source
\end_layout

\end_inset

/
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Drain
\end_layout

\end_inset

 as appropriate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
protect
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Converting DNF expression to Gates
\begin_inset CommandInset label
LatexCommand label
name "alg:Converting-DNF-expression"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The pseudo-code above describes the final implementation of the gate creation
 algorithm, however, initially, a different approach was attempted, which
 expanded the number of classes inheriting from 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Plain Layout
Node
\end_layout

\end_inset

 to include implications and a representation of iff, as well as the classes
 for the gates.
 After parsing the formula, a function then proceeded to try and convert
 the formula and its negation into a series of gates with literals as inputs,
 joined by conjunctions and disjunctions.
 Dealing with the large number of special cases quickly became impractical,
 especially when small repeated changes had to be made, and therefore was
 abandoned in favour of a separation of the logical and 
\begin_inset Quotes eld
\end_inset

physical
\begin_inset Quotes erd
\end_inset

 models, where the gates were joined by wires and received potentials as
 inputs.
\end_layout

\begin_layout Standard
Initially, potential was going to be simulated using an 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Plain Layout
Option[Boolean]
\end_layout

\end_inset

, with 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Plain Layout
Nothing
\end_layout

\end_inset

 to simulate an undriven gate/wire, and 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Plain Layout
Some(true)
\end_layout

\end_inset

 and 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Plain Layout
Some(false)
\end_layout

\end_inset

 to indicate high and low potential separately.
 This approach has also been reworked, to further separate the differences
 between the abstract logical expressions with precise true/false values,
 and the CMOS-specific high and low potentials where the gates/wires are
 driven, or a specific 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Plain Layout
Undriven
\end_layout

\end_inset

 value.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwInOut
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Input
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Input
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwInOut
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Output
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Output
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwInOut
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

SideEffects
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Side Effects
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

prvsGt
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

previousGate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Result
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Result
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Source
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Source
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Drain
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Drain
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

pgate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

P-Gate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

ngate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

N-Gate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

wh
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

WireHigh
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

wl
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

WireLow
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

high
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

High
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

low
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Low
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

und
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Undriven
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwFunction
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

gstatus
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Gate-Status
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwFunction
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

wstatus
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Wire-Status
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwProg
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Def
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

def
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 as
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

end
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Input
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

None (necessary information contained in static object)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Output
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

True/false value to indicate if the output is driven
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SideEffects
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

None
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
BlankLine
\end_layout

\end_inset

 
\begin_inset Formula $r\gets\und$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ForEach
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

gate 
\begin_inset Formula $\in$
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Result
\end_layout

\end_inset

 sources
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
If
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $\gstatus{gate}\neq\und$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $r\gets$
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
gstatus
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

gate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
If
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $r=\und$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ForEach
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

gate 
\begin_inset Formula $\in$
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Result
\end_layout

\end_inset

 drains
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
If
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $\gstatus{gate}\neq\und$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $r\gets$
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
gstatus
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

gate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
eIf
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $r=\und$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

report error
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Return
\end_layout

\end_inset

 
\begin_inset Formula $r$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
protect
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Traversing gates to determine driven-ness
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwInOut
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Input
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Input
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwInOut
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Output
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Output
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

prvsGt
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

previousGate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Result
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Result
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Source
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Source
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Drain
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Drain
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

pgate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

P-Gate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

ngate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

N-Gate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

wh
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

WireHigh
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

wl
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

WireLow
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

high
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

High
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

low
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Low
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

und
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Undriven
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwFunction
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

gstatus
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Gate-Status
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwFunction
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

wstatus
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Wire-Status
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwProg
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Def
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

def
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 as
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

end
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Def
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
gstatus
\end_layout

\end_inset

(gate: Gate)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Input
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

gate to check for driven-ness
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Output
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Potential on gate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset Formula $r\gets\und$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
eIf
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

gate is 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pgate
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
eIf
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $\neg$
\end_inset

gate.input
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $r\gets$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
wstatus
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

gate.source
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $r\gets\und$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 By symmetry for 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ngate
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Return
\end_layout

\end_inset

 
\begin_inset Formula $r$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Def
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
wstatus
\end_layout

\end_inset

(wire: Wire)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Input
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

wire to check for driven-ness
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Output
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Potential on wire
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset Formula $r\gets\und$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
If
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

wire is 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Source
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $r\gets\high$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ElseIf
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

wire is 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Drain
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $r\gets\low$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ElseIf
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

wire is 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
wh
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
eIf
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $\neg$
\end_inset

gate.input
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $r\gets$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
wstatus
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

gate.source
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $r\gets\und$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ElseIf
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

wire is 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
wl
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 By symmetry for 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
wl
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Return
\end_layout

\end_inset

 
\begin_inset Formula $r$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
protect
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Helper methods to traverse gates to determine driven-ness
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Helpers
\end_layout

\begin_layout Paragraph
Parsing
\begin_inset CommandInset label
LatexCommand label
name "sub:Parsing"

\end_inset


\end_layout

\begin_layout Standard
The Packrat parsing library is one of the many libraries available in Scala
 for parsing purposes.
\begin_inset CommandInset citation
LatexCommand cite
key "packrat"

\end_inset

 This library has the advantage of allowing efficient parsing by using memoisati
on to reduce the number of times that a production rule needs testing.
 This parsing library uses a domain-specific language to assist in the definitio
n of the grammar to be parsed to ensure that the abstract representation
 of the grammar matches the implementation as closely as possible.
\end_layout

\begin_layout Paragraph
Normal Forms
\begin_inset CommandInset label
LatexCommand label
name "sub:Normal-Forms"

\end_inset


\end_layout

\begin_layout Standard
After an expression is parsed, it is then converted to a normal form to
 allow the gate conversion tool to process it, in this case, as a disjunction
 of conjunctions, by using the Quine-McCluskey Algorithm, and algorithm
 developed by McCluskey
\begin_inset CommandInset citation
LatexCommand cite
key "mccluskey"

\end_inset

, building on work by Quine
\begin_inset CommandInset citation
LatexCommand cite
key "quine1,quine2"

\end_inset

.
 The algorithm has the following sections: 
\end_layout

\begin_layout Enumerate
Convert logical expression to boolean function: 
\begin_inset Formula 
\begin{eqnarray*}
f & : & \{0,1\}^{\mid\mathcal{A}\mid}\rightarrow\{0,1\}\\
f\left(v_{1},v_{2},\ldots v_{n}\right) & = & \sum m\left(n_{1},n_{2},\ldots,n_{m}\right)+d\left(n_{m+1},\ldots,n_{k}\right)
\end{eqnarray*}

\end_inset

where 
\begin_inset Formula $m$
\end_inset

 is the set of minterms, and 
\begin_inset Formula $d$
\end_inset

 is the set of 
\begin_inset Quotes eld
\end_inset

don't care
\begin_inset Quotes erd
\end_inset

 values (not needed in this implementation, as we are only considering logical
 expressions that are defined in the syntax given above).
 The minterms give a non-minimal canonical representation of a formula (e.g.
 for 
\begin_inset Formula $f(A,B)=\sum m(0)$
\end_inset

, 
\begin_inset Formula $f$
\end_inset

 represents the boolean formula 
\begin_inset Formula $\neg A\land\neg B$
\end_inset

) 
\end_layout

\begin_layout Enumerate
Find the prime implicants of the function (
\begin_inset Formula $P$
\end_inset

 is an 
\emph on
implicant
\emph default
 for 
\begin_inset Formula $F$
\end_inset

 if 
\begin_inset Formula $P$
\end_inset

 is a conjunction of literals, and if 
\begin_inset Formula $\mathcal{A}\models F$
\end_inset

 whenever
\begin_inset Formula $\mathcal{A}\models P$
\end_inset

.
 A 
\emph on
prime implicant
\emph default
 is an implicant that is minimal in the number of terms that it contains
 (i.e.
 no more literals can be removed without it becoming a non-implicant)) 
\end_layout

\begin_layout Enumerate
Find the essential prime implicants, as well as any others that are necessary
 to cover the function (a prime implicant is 
\emph on
essential 
\emph default
when it is the only prime implicant to cover some minterm) 
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwInOut
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Input
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Input
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwInOut
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Output
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Output
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

expr
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Expression
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

mts
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Minterms
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Input
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Logical Expression
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Output
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

List of minterms
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
BlankLine
\end_layout

\end_inset

 Get from 
\begin_inset Formula $\mathcal{V}$
\end_inset

 from 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
expr
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 Variable list 
\begin_inset Formula $\gets$
\end_inset

 
\begin_inset Quotes eld
\end_inset


\begin_inset Quotes erd
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ForEach
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $v\gets\mathcal{V}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Variable list 
\begin_inset Formula $\gets v+\text{Variable list}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ForEach
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $i\in\{0,1,\ldots,2^{\mid\mathcal{V}\mid}\}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ForEach
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $j\in\mathbb{Z}_{\mid\mathcal{V}\mid}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $\mathcal{A}\left(v_{j}\right)=\sfrac{i}{2^{j}}\mod2$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
If
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $\mathcal{A}\models\expr$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
mts
\end_layout

\end_inset

 
\begin_inset Formula $\gets\mts\cup\{i\}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Return
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
mts
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
protect
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Quine-McCluskey -- Logical Expression to Boolean Function
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwInOut
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Input
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Input
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwInOut
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Output
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Output
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

expr
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Expression
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

mts
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Minterms
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

imtbl
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

ImplicantTable
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Input
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

List of minterms 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
mts
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Output
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

List of prime implicants
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
BlankLine
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ForEach
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $i\in\mts$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset Formula $\text{trueCount}=0$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ForEach
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $j\in\mathbb{Z}_{\mid\mathcal{V}\mid}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset Formula $\imtbl_{i,v_{j}}\gets\sfrac{i}{2^{j}}\mod2$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset Formula $\text{trueCount}\gets\text{trueCount}+\sfrac{i}{2^{j}}\mod2$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset Formula $\imtbl_{i,\text{trueCount}}\gets\text{trueCount}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset Formula $\text{modified}\gets\top$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
While
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $\text{modified}=\top$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset Formula $\text{modified}\gets\bot$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ForEach
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $i\in\imtbl$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ForEach
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $j\in\imtbl,j\neq i$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
If
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $i$
\end_inset

 and 
\begin_inset Formula $j$
\end_inset

 differ in one position in 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
imtbl
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset Formula $\imtbl_{\langle i,j\rangle}\gets\imtbl_{i}\oplus\imtbl_{j}$
\end_inset

 where 
\begin_inset Formula $i\oplus j$
\end_inset

 produces 
\begin_inset Formula $i\land j$
\end_inset

 with any differences replaced with --
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset Formula $\text{modified}\gets\top$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
If
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $\text{modified}=\bot$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 mark 
\begin_inset Formula $i$
\end_inset

 as prime
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Return
\end_layout

\end_inset

 marked entries in 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
imtbl
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
protect
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Quine-McCluskey -- Prime Implicants
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwInOut
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Input
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Input
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwInOut
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Output
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Output
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

expr
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Expression
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

mts
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Minterms
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

pimps
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

PrimeImplicants
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

mtsimp
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Minterm-Imp-Table
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

mmts
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Minimised-Minterms
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

cmts
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

CoveredMinterms
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

cimps
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

ChosenImplicants
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Input
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

List of prime implicants, and minterms
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Output
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Minimised expression in DNF
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
BlankLine
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ForEach
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $m\in\mts$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ForEach
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $p\in\pimps$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
If
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $m\models p$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset Formula $\mtsimp_{m,p}\gets\top$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
BlankLine
\end_layout

\end_inset

 
\begin_inset Formula $\cmts\gets\emptyset$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset Formula $\cimps\gets\emptyset$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ForEach
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $m\in\mts$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
If
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $\mid x=\{i\in\mtsimp:\mtsimp_{m,i}=\top\}\mid=1$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset Formula $\mmts\gets\mmts\cup x$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ForEach
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $\text{minterm}\in x$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset Formula $\cmts\gets\cmts\cup\text{minterm}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tcc
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Find all essential implicants (only covering for a minterm), and add them
 to the list of required implicants
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
BlankLine
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ForEach
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $m\in\mts\setminus\cmts$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 Find 
\begin_inset Formula $c\in\pimps$
\end_inset

 such that 
\begin_inset Formula $c$
\end_inset

 covers 
\begin_inset Formula $m$
\end_inset

 and as many other values as possible
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset Formula $\mmts\gets\mmts\cup\{c\}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Return
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
mmts
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
protect
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Quine-McCluskey -- Essential and covering implicants
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
View and Controller
\end_layout

\begin_layout Standard
The view and controller are handled by two separate classes, one with an
 overall responsibility for drawing and updating the UI view presented to
 the user, written in Java and named 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Plain Layout
Gui
\end_layout

\end_inset

, which then invokes the 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Plain Layout
DrawCircuit
\end_layout

\end_inset

 Scala class to initially draw and then update the displayed circuit as
 the inputs are changed.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwInOut
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Input
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Input
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwInOut
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Output
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Output
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwInOut
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

SideEffects
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Side Effects
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

prvsGt
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

previousGate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Result
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Result
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Source
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Source
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Drain
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Drain
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

graph
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Graph
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

ngate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

N-Gate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

pgate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

P-Gate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

lastgates
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

LastGates
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwFunction
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

gstatus
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Gate-Status
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

und
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Undriven
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Input
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Graph object to draw on (all other data accessed statically)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Output
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

None
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SideEffects
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Graph updated with visual representation of gates
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
BlankLine
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
Clear 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
graph
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
Add 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Result
\end_layout

\end_inset

 to graph as long thin horizontal line going through 
\begin_inset Formula $(0,0)$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Formula $x\leftarrow0$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ForEach
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

gate : 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ngate
\end_layout

\end_inset

 attached to 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Result
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Formula $y\leftarrow0$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
currentGate 
\begin_inset Formula $\leftarrow$
\end_inset

 gate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
While
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

currentGate 
\begin_inset Formula $\neq$
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Source
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
Add currentGate to 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
graph
\end_layout

\end_inset

 at 
\begin_inset Formula $(x,y)$
\end_inset

 with size 
\begin_inset Formula $(\delta_{x},\delta_{y})$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
If
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
gstatus
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

currentGate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Formula $\neq\und$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Highlight currentGate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
currentGate 
\begin_inset Formula $\leftarrow$
\end_inset

 gate.next
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Formula $y\leftarrow y+\delta_{y}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
lastgates
\end_layout

\end_inset

 
\begin_inset Formula $\leftarrow$
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
lastgates
\end_layout

\end_inset

 
\begin_inset Formula $\cup$
\end_inset

 currentGate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Formula $x\leftarrow x+\delta_{x}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ForEach
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

gate 
\begin_inset Formula $\in$
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
lastgates
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
eIf
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

gate : 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ngate
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
Connect gate to 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Source
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
Connect gate to 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Drain
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
protect
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Gate Drawing Algorithm
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Comparison to a Compiler
\end_layout

\begin_layout Standard
The usual definition of a compiler is 
\begin_inset Quotes eld
\end_inset

a program that can read a program in one language and traslate it into an
 equivalent program in another language
\begin_inset Quotes erd
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "aho2003compilers"

\end_inset

 usually with some sort of intermediate feedback if errors are encountered;
 with most compilers usually translating from a human-readable, high-level
 language into something low-level that can then be directly executed by
 a machine.
 The structure of a compiler can be thought of as the composition of a series
 of functions, each with a distinct focus.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[scale=0.4, every node/.style={x=1cm,y=1cm,scale=0.6,font=
\backslash
small}]
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
type{{"char stream","token stream","syntax tree","syntax tree","intermediate
 representation","intermediate representation","target-machine code","target-mac
hine code"}}%
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
function{{"Lexical analyser","Syntax analyser","Semantic analyser","Intermediate
 code generator","Machine-Independent code optimiser","Code generator","Machine-
Dependent code optimiser"}}%
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
foreach 
\backslash
i in {0,8,16,24} {
\end_layout

\begin_layout Plain Layout

	
\backslash
draw (
\backslash
i,0) rectangle (
\backslash
i+4,3);
\end_layout

\begin_layout Plain Layout

	
\backslash
draw [->] plot coordinates{ (
\backslash
i-2,1.5)  (
\backslash
i,1.5) };
\end_layout

\begin_layout Plain Layout

	
\backslash
node [text width=2.25cm] at (
\backslash
i+2.125, 1.5) {
\backslash
pgfmathparse{
\backslash
function[
\backslash
i/8]}
\backslash
pgfmathresult};
\end_layout

\begin_layout Plain Layout

	
\backslash
node [text width=1.25cm] at (
\backslash
i-2.75, 1.5) {
\backslash
pgfmathparse{
\backslash
type[
\backslash
i/8]}
\backslash
pgfmathresult};
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
foreach 
\backslash
i in {0,8,16} {
\end_layout

\begin_layout Plain Layout

	
\backslash
draw (
\backslash
i,-5) rectangle (
\backslash
i+4,-2);
\end_layout

\begin_layout Plain Layout

	
\backslash
draw [->] plot coordinates{ (
\backslash
i-2,-3.5)  (
\backslash
i,-3.5) };
\end_layout

\begin_layout Plain Layout

	
\backslash
node [text width=2.25cm] at (
\backslash
i+2.125, -3.5) {
\backslash
pgfmathparse{
\backslash
function[
\backslash
i/8+4]}
\backslash
pgfmathresult};
\end_layout

\begin_layout Plain Layout

	
\backslash
node [text width=1.25cm] at (
\backslash
i-3, -3.5) {
\backslash
pgfmathparse{
\backslash
type[
\backslash
i/8+4]}
\backslash
pgfmathresult};
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout


\backslash
draw (28,1.5) -- (28.5,1.5) -- (28.5,-1) -- (-3,-1) -> (-3,-2.5);
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset

 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
protect
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Compiler Structure
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In a conventional compiler, the lexical analysis stage splits up the entered
 text into variables to be recognised within the program, or as keywords/reserve
d tokens within the language, usually achieved using some deterministic
 finite automata to recognise a regular expression, with some order of precedenc
e established to allow keywords to be treated as such, rather than as variables.
 This is followed by syntax analysis, where the discrete tokens are then
 used to form a 
\emph on
syntax tree
\emph default
, usually following the shape of some context-free grammar, similar to the
 structure of logical expressions defined in 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
crefrange
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

eq:neg
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

eq:var
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

.
 Semantic analysis varies in its depth, depending on the language, however,
 most compilers will usually perform some sort of check for proper declaration,
 as well as ensuring that variables are not used outside of the scope that
 they were defined in.
\end_layout

\begin_layout Standard
The lexical, syntax, and semantic analysis stages can all be thought to
 be covered by the compiler, as the various tokens in the language (
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Plain Layout
and
\end_layout

\end_inset

, 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Plain Layout
or
\end_layout

\end_inset

, 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Plain Layout
!
\end_layout

\end_inset

, 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Plain Layout
(
\end_layout

\end_inset

, and 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Plain Layout
)
\end_layout

\end_inset

) are isolated and then used to form the syntax tree, while variables are
 added to the assignment map in the 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Plain Layout
Variable
\end_layout

\end_inset

 object.
 Additionally, should any stage of the parsing module fail, the first of
 these errors is then reported back to the user to allow them to correct
 their input, and the assignment map emptied so that their previous state
 does not then affect their next input.
 Owing to the simplicity of the propositional logic language, there is obviously
 no need for formal semantic analysis of the entered expression, however,
 it is useful to register each variable, with the minimal semantic check
 that the reserved keyword 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
out
\end_layout

\end_inset

 is not used in the entered expression.
\end_layout

\begin_layout Standard
Once no more work can occur on the syntax tree, the compiler then starts
 to focus on generating code, directed by the structure of the syntax tree,
 following by platform-agnostic optimisations that focus on repeated patterns
 within the code, or redundant operations often focusing on a small number
 of operations at any one time.
 This process is often called 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
peephole optimisation
\end_layout

\end_inset

 owing to the metaphor of only being able to see a small part of a scene
 at any one time through a peephole camera.
 
\end_layout

\begin_layout Standard
This is replaced in the CMOS calculator by the Quine-McCluskey algorithm
 before gate generation, effectively putting the optimisation before the
 code generation, though in a more general software engineering metaphor,
 this could be considered as a refactoring to remove redundancy before actually
 compiling the code, resulting in different byte-code, but with equivalent
 effects.
\end_layout

\begin_layout Standard
Once no more work can take place on the intermediate code, a compiler then
 starts producing platform-specific code, followed by any further platform-speci
fic operations.
 In the CMOS calculator's case, this would then be the gate generation algorithm
, taking the canonical form generated by the Quine-McCluskey algorithm,
 and turning it into the CMOS implementation.
\end_layout

\begin_layout Section
Testing
\end_layout

\begin_layout Subsection
General Testing Strategy
\end_layout

\begin_layout Standard
The logical expression were deliberately designed so that the output that
 they would produce would be compatible with the parser, thus making testing
 the output of any given module producing logical expressions as output
 much easier, as they could then be compared to the expected values, once
 the behaviour of the parser was verified.
\end_layout

\begin_layout Standard
Where possible the testing is designed to test error cases, simple cases
 (e.g.
 atoms in the parser, or simple expressions for the Quine-McCluskey algorithm),
 followed by more complicated cases, usually based on the inductive definitions
 seen above.
\end_layout

\begin_layout Subsection
Parsing
\end_layout

\begin_layout Standard
Care must be taken, as already discussed to ensure that only valid inputs
 are parsed, without affecting the ability of the program to opearte using
 predefined constants that have been set aside for specific purposes.
 Furthermore, the parser must ensure that statements are parsed with due
 care paid to the order of operations, with negations binding correctly.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="18" columns="4">
<features rotate="0" booktabs="true" tabularvalignment="middle" tabularwidth="100text%">
<column alignment="none" valignment="top" special="@{\extracolsep{\fill}}l">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected Output 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected Output
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Quotes eld
\end_inset


\begin_inset Quotes erd
\end_inset


\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset

None 
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

a and b 
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

And(Variable(a), Variable(b))
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

!a and b 
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

Not(And(Variable(a), Variable(b))
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
True 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

a and !b 
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

And(Variable(a), Not(Variable(b)))
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset

out
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

None
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

!a and !b
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

Not(And(Variable(a), Not(Variable(b)))
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

test
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

Variable(test)
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

(!a) and b 
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

And(Not(Variable(a)), Variable(b))
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

(
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

None
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

a and (!b) 
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

And(Variable(a), Not(Variable(b)))
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

)
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

None
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

(!a) and !b
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

And(Not(Variable(a)), Not(Variable(b)))
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

()
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

None
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

or
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

None
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

a 
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

Variable(a) 
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

a or
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

None
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

(a)
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

Variable(a)
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

or a
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

None
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

! 
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

None 
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

a or b
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

Or(Variable(a), Variable(b))
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

!a 
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

Not(Variable(a))
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

!a or b 
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

Not(Or(Variable(a), Variable(b)))
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

(!a)
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

Not(Variable(a))
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

a or !b 
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

Or(Variable(a), Not(Variable(b)))
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

!(a)
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

Not(Variable(a))
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

!a or !b
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

Not(Or(Variable(a), Not(Variable(b))))
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

and 
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

None 
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

(!a) or b 
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

Or(Not(Variable(a)), Variable(b))
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

a and 
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

None 
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

a or (!b) 
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

Or(Variable(a), Not(Variable(b)))
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

and a 
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

None 
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

(!a) or !b
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

Or(Not(Variable(a)), Not(Variable(b))))
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
protect
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Parsing Test Data
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "parsing-test"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Quine-McCluskey Algorithm
\end_layout

\begin_layout Subsection
Gate Generation and Drawing
\end_layout

\begin_layout Section
Conclusions and Further Work
\end_layout

\begin_layout Subsection
Conclusions
\end_layout

\begin_layout Standard
The project has acheived much of the scope that it had originally set out
 to, however, the order of completion of different subcomponents of the
 program needed changing quite substantially.
\end_layout

\begin_layout Subsection
Further Work
\end_layout

\begin_layout Subsubsection
Model
\end_layout

\begin_layout Standard
This project has deliberately focused on defining logical expressions using
 strictly binary values, and precisely adhering to the standard rulse for
 laying out CMOS diagrams, without any deviations.
 It has been assumed that the output wire will always be driven, with an
 undriven state being invalid, whereas the standard 
\emph on
enb
\emph default
 
\begin_inset CommandInset citation
LatexCommand cite
key "digsys"

\end_inset

gate 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{picture}
\end_layout

\end_inset

(25,27)(-2,-3) 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{thicklines}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
multiput
\end_layout

\end_inset

(0,0)(0,24)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(1,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

18
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{thicklines}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
multiput
\end_layout

\end_inset

(12,21)(0,-6)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ptrans
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
multiput
\end_layout

\end_inset

(9,3)(6,6)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ntrans
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
multiput
\end_layout

\end_inset

(9,0)(6,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
blob
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(15,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(0,1)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

6
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(0,3)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(1,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

6
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(-3,3)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
makebox(0,0){
\end_layout

\end_inset


\begin_inset Formula $a$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(3,3)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
blob
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(3,3)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(0,1)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

12
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(3,15)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(1,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

6
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(0,21)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(1,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

9
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(-3,21)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
makebox(0,0){
\end_layout

\end_inset


\begin_inset Formula $b$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(6,21)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
blob
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(6,21)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(0,-1)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

5.7
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(6,9)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(0,1)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

5.7
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(6,9)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(1,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

2.7
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(12,9)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(-1,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

2.7
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(12,24)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
blob
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(9,6)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(0,1)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

6
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(9,12)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
line
\end_layout

\end_inset

(1,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

9
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
put
\end_layout

\end_inset

(21,12)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
makebox(0,0){
\end_layout

\end_inset


\begin_inset Formula ${\it out}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
multiput
\end_layout

\end_inset

(12,12)(3,0)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
blob
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{picture}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
protect
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Formula $\mathit{enb}$
\end_inset

 gate
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
, where 
\begin_inset Formula $\mathit{enb}\rightarrow(\mathit{in}\leftrightarrow\mathit{out})$
\end_inset

, and 
\begin_inset Formula $\neg\mathit{enb}$
\end_inset

 is undriven cannot be represented currently.
 Additionally, the structure of the gates produced by the gate placing algorithm
 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
nameref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

alg:Converting-DNF-expression
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 is more constrained than the gates that amy be drawn.
\end_layout

\begin_layout Standard
Decreasing the verbosity of the required input should also be a priority
 for future development.
 While operators such as 
\begin_inset Formula $\rightarrow$
\end_inset

, 
\begin_inset Formula $\leftrightarrow$
\end_inset

, 
\begin_inset Formula $\oplus$
\end_inset

 do not add any additional expressiveness to the language, they are not
 currently parsed by the parsing module.
\end_layout

\begin_layout Subsubsection
View
\end_layout

\begin_layout Standard
The data produced by the view is currently only in a limited number of bitmap
 image formats, whereas a future version of this software should be able
 to produce a wider variety of formats, and ideally, especially for reports
 like this, LaTeX-compatible output, or Dia compatible output.
\end_layout

\begin_layout Subsubsection
Controller
\end_layout

\begin_layout Standard
Due to the implementation of the pointer-based mxGraph that I was using
 to produce the visual output, it was not possible for the user to interact
 with the graph itself directly, rather, and changes to the assignments
 or expression triggered a redraw where any changes were then made visible.
 In larger graphs, if they were particularly complicated, this may not have
 always been particularly obvious, therefore, a future iteration of this
 project, a brief highlighting effect should be considered, in order to
 further improve visibility.
 Additionally, due to the indirect way of accessing nodes in the graph,
 a useful addition would be to include the ability to directly interact
 with the graph to see the result of changing specific variables.
\end_layout

\begin_layout Standard
Adding the ability to drag-and-drop gates onto the graph, connect them and
 derive an expression for a valid arrangement of gates would be a logical
 extension of the current functionality, though it is likely that any output
 produced would, unless the number of variables was limited, not be in any
 normal form, due to the cost of running the Quine-McCluskey algorithm (in
 the worst case, 
\begin_inset Formula $\left(O\left(\sfrac{3^{n}}{n}\right)\right)$
\end_inset

 prime implicants will be generated alone).
 Additionally, unless the graph was encoded with the rules required for
 valid CMOS structures, it would be trivial for users to produce graphs
 that may have undriven output, which then cannot be validly encoded as
 a logical expression.
\end_layout

\begin_layout Section
Acknowledgements
\end_layout

\begin_layout Standard
Professor Geraint Jones, my supervisor, for his advice and the diagrams
 of the N-Gates and P-Gates seen in this document.
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "citations"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
